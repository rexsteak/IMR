@model Inspinia_MVC5.Models.Content

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Edit</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Edit</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit Content</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Content_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
                @ViewBag.titleError
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @id = "form-field-6", @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.Application_Id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application_Id)
                @Html.ValidationMessageFor(model => model.Application_Id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentType_Id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContentType_Id", String.Empty)
                @Html.ValidationMessageFor(model => model.ContentType_Id)
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.Path, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Path)
                @Html.ValidationMessageFor(model => model.Path)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DownloadTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DownloadTime)
                @Html.HiddenFor(model => model.DownloadTime)
                @Html.ValidationMessageFor(model => model.DownloadTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Seq, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Seq)
                @Html.ValidationMessageFor(model => model.Seq)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place)
                @Html.ValidationMessageFor(model => model.Place)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>
    </div>
}


                </div>
            </div>
        </div>
    </div>
 </div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
